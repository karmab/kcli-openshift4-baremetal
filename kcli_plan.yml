{% set virtual_disks = [{'size': disk_size, 'interface': 'scsi'}] + extra_disks %}
{% if lab %}
{{ baremetal_net }}:
 type: network
 cidr: {{ baremetal_cidr }}
{% if lab_domain is defined %}
 domain: {{ lab_domain }}
{% endif %}
{% if (dualstack or dual_force|default(False)) and dualstack_cidr != None %}
 dual_cidr: {{ dualstack_cidr }}
{% endif %}
{% if provisioning_enable %}
{{ provisioning_net }}:
 type: network
 cidr: {{ provisioning_cidr }}
 dhcp: false
{% endif %}
{% endif %}

{{ image }}:
 type: image
 url: {{ image_url }}

{% if lab or (baremetal_ips and baremetal_ips|length >0) %}
api:
 type: dns
 net: {{ baremetal_net }}
 ip: {{ api_ip }}
 alias:
 - api.{{ cluster }}.{{ domain }}
 - api-int.{{ cluster }}.{{ domain }}

apps:
 type: dns
 net: {{ baremetal_net }}
 ip: {{ ingress_ip }}
 alias:
 - console-openshift-console.apps.{{ cluster }}.{{ domain }}
 - oauth-openshift.apps.{{ cluster }}.{{ domain }}
 - prometheus-k8s-openshift-monitoring.apps.{{ cluster }}.{{ domain }}
 - canary-openshift-ingress-canary.apps.{{ cluster }}.{{ domain }}
 - assisted-service-open-cluster-management.apps.{{ cluster }}.{{ domain }}
 - assisted-service-assisted-installer.apps.{{ cluster }}.{{ domain }}

{% if acm and acm_spoke_api_ip != None and acm_spoke_ingress_ip != None %}
api-{{ acm_spoke_name }}:
 type: dns
 net: {{ baremetal_net }}
 ip: {{ acm_spoke_api_ip }}
 alias:
 - api.{{ acm_spoke_name }}.{{ domain }}
 - api-int.{{ acm_spoke_name }}.{{ domain }}

apps-{{ acm_spoke_name }}:
 type: dns
 net: {{ baremetal_net }}
 ip: {{ acm_spoke_ingress_ip }}
 alias:
 - console-openshift-console.apps.{{ acm_spoke_name }}.{{ domain }}
 - oauth-openshift.apps.{{ acm_spoke_name }}.{{ domain }}
 - prometheus-k8s-openshift-monitoring.apps.{{ acm_spoke_name }}.{{ domain }}
 - canary-openshift-ingress-canary.apps.{{ acm_spoke_name }}.{{ domain }}
 - assisted-service-open-cluster-management.apps.{{ acm_spoke_name }}.{{ domain }}
 - assisted-service-assisted-installer.apps.{{ acm_spoke_name }}.{{ domain }}
{% endif %}
{% endif %}

{% if virtual_masters %}
{% for num in range(0, virtual_masters_number) %}
{{ cluster }}-master-{{ num }}:
 pool: {{ pool }} 
 numcpus: {{ virtual_masters_numcpus }}
 cloudinit: false
 start: false
 uefi: {{ 'true' if virtual_protocol == 'redfish' or not provisioning_enable else 'false' }}
 uefi_legacy: {{ uefi_legacy }}
 memory: {{ virtual_masters_memory }}
 nets:
{% if provisioning_enable %}
  - name: {{ provisioning_net }}
    mac: {{ virtual_masters_mac_prefix + ":" + "%02.d" | format(num + 1)| string }}
{% endif %}
  - name: {{ baremetal_net }}
{% if baremetal_macs and baremetal_macs|length > num %}
    mac: {{ baremetal_macs[num] }}
{% elif not provisioning_enable %}
    mac: {{ virtual_masters_baremetal_mac_prefix + ":" + "%02.d" | format(num + 1)| string }}
{% endif %}
{% if lab and baremetal_ips and baremetal_ips|length > num %}
    ip: {{ baremetal_ips[num] }}
    reserveip: true
{% endif %}
 disks: {{ virtual_disks }}
{% endfor %}
{% endif %}

{% if virtual_workers %}
{% for num in range(0, virtual_workers_number) %}
{{ cluster }}-worker-{{ num }}:
 pool: {{ pool }} 
 numcpus: {{ virtual_workers_numcpus }}
 start: false
 cloudinit: false
 uefi: {{ 'true' if virtual_protocol == 'redfish' or not provisioning_enable else 'false' }}
 uefi_legacy: {{ uefi_legacy }}
 memory: {{ virtual_workers_memory }}
 nets:
{% if provisioning_enable %}
  - name: {{ provisioning_net }}
    mac: {{ virtual_workers_mac_prefix + ":" + "%02.d" | format(num + 1)| string }}
{% endif %}
  - name: {{ baremetal_net }}
{% if baremetal_macs and baremetal_macs|length > virtual_masters_number + num %}
    mac: {{ baremetal_macs[virtual_masters_number + num] }}
{% elif not provisioning_enable %}
    mac: {{ virtual_workers_baremetal_mac_prefix + ":" + "%02.d" | format(num + 1)| string }}
{% endif %}
{% if lab and baremetal_ips and baremetal_ips|length > virtual_masters_number + num %}
    ip: {{ baremetal_ips[virtual_masters_number + num] }}
    reserveip: true
{% endif %}
 disks: {{ virtual_disks }}
{% endfor %}
{% endif %}

{% if acm and acm_virtual_nodes %}
{% for num in range(0, acm_virtual_nodes_number) %}
{{ cluster }}-acm-node-{{ num }}:
 pool: {{ pool }}
 numcpus: {{ acm_virtual_nodes_numcpus }}
 start: false
 cloudinit: false
# uefi: {{ 'true' }}
 uefi_legacy: True
 memory: {{ acm_virtual_nodes_memory }}
 nets:
  - name: {{ baremetal_net }}
    mac: {{ acm_virtual_nodes_baremetal_mac_prefix + ":" + "%02.d" | format(num + 1)| string }}
 disks:
 - size: {{ acm_virtual_nodes_disk_size }}
   interface: scsi
{% endfor %}
{% endif %}

{{ cluster }}-installer: 
 image: {{ image }} 
 playbook: {{ playbook }}
 pool: {{ pool }} 
 wait: {{ installer_wait }}
 numcpus: {{ numcpus }}
 uefi_legacy: false
 reservedns: {{ True if lab else False }}
 keys: {{ keys }}
{% if 'rhel' in image %}
 rhnregister: {{ rhnregister }}
{% endif %}
 networkwait: {{ rhnwait }}
 memory: {{ memory }}
 privatekey: true
 notify: {{ notify }}
{% if deploy_openshift %}
 notifyscript: {{ notifyscript }}
{% elif launch_steps %}
 notifycmd: ls /root/bin/openshift-baremetal-install
{% else %}
 notifycmd: echo machine $(hostname) ready at $(hostname -I)
{% endif %}
 nets:
 - name: {{ baremetal_net }}
{% if installer_mac != None %}
   mac: {{ installer_mac }}
{% endif %}
{% if provisioning_enable %}
 - name: {{ provisioning_net }}
   noconf: yes
{% endif %}
{% if baremetal_cidr != None and ':' in baremetal_cidr and not dualstack %}
 - default
{% endif %}
 disks:
 - {{ disk_size }}
 files:
 - path: /etc/sushy.conf
   origin: helpers/sushy.conf
 - path: /root/00_virtual.sh
   origin: {{ '00_virtual.sh.redfish' if not provisioning_enable else '00_virtual.sh.' + virtual_protocol }}
 - 01_patch_installconfig.sh
 - 02_packages.sh
 - 03_network.sh
 - 04_get_clients.sh
 - 05_cache.sh
 - 06_disconnected.sh
 - 065_olm.sh
 - 07_nbde.sh
 - 08_ntp.sh
 - 09_deploy_openshift.sh
 - 10_nfs.sh
 - 10_nfs.yml
 - install-config.yaml                                                                                                                           
 - clouds.yaml
 - .bashrc
 - extra_worker.yml
 - origin: {{ pullsecret }}
   path: /root/openshift_pull.json                                                                                                                    
 - path: /root/bin/ipmi.py
   origin: helpers/ipmi.py
 - path: /root/bin/vbmc.py
   origin: helpers/vbmc.py
 - path: /root/bin/redfish.py
   origin: helpers/redfish.py
 - path: /root/bin/sushy.py
   origin: helpers/sushy.py
 - path: /usr/lib/systemd/system/sushy.service
   origin: helpers/sushy.service
 - path: /root/bin/clean.sh
   origin: helpers/clean.sh
 - path: /root/bin/set_ironic_creds.sh
   origin: helpers/set_ironic_creds.sh
   render: false
 - path: /root/manifests
   origin: manifests
 - 99-openshift-tang-encryption-clevis.sample.yaml
 - 99-openshift-tang-encryption-ka.sample.yaml
 - 99-openshift-chrony.sample.yaml
 - 99-openshift-ingress-controller-master.yaml
 - 99-operatorhub.yaml
{% for ca in cas %}
{% set num = loop.index0 %}
 - path: /etc/pki/ca-trust/source/anchors/RH-IT-Root-CA{{ num }}.crt
   content: |
    {{ ca |certificate | replace('\n', '\n    ') }}
{% endfor %}
{% if acm %}
 - acm_assisted-service.sample.yml
 - acm_spoke.sample.yml
 - 23_acm.sh
 - acm_bmc.yml
 - acm_install.yml
 - acm_cr.yml
 - path: /root/bin/gen_registries.py
   origin: helpers/gen_registries.py
{% endif %}
{% if launch_steps %}
 scripts:
{% if build %}
 - helpers/build.sh
{% endif %}
 - deploy.sh
{% endif %}
