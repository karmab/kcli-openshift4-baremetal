{% if ztp_acm and 'advanced-cluster-management' not in disconnected_operators %}
{{ disconnected_operators.append("advanced-cluster-management") or "" }}
{% endif %}

{% if ztp_acm and 'multicluster-engine' not in disconnected_operators %}
{{ disconnected_operators.append("multicluster-engine") or "" }}
{% endif %}

{% if 'openshift-gitops-operator' not in disconnected_operators %}
{{ disconnected_operators.append("openshift-gitops-operator") or "" }}
{% endif %}

{% if 'topology-aware-lifecycle-manager' not in disconnected_operators %}
{{ disconnected_operators.append("topology-aware-lifecycle-manager") or "" }}
{% endif %}

{% if ztp_spokes|length > 0 and 'sriov-network-operator' not in disconnected_operators %}
{{ disconnected_operators.append("sriov-network-operator") or "" }}
{% endif %}

{% if ztp_spokes|length > 0 and 'lvms-operator' not in disconnected_operators %}
{{ disconnected_operators.append("lvms-operator") or "" }}
{% endif %}

{% set snoplus_spokes = [] %}

{% for spoke in ztp_spokes %}
{% set spoke_name = spoke.name %}
{% set spoke_api_ip = spoke.get('api_ip') %}
{% set spoke_ingress_ip = spoke.get('ingress_ip') %}
{% if lab and spoke_api_ip != None and spoke_ingress_ip != None %}
api-{{ spoke_name }}:
 type: dns
 net: {{ baremetal_net }}
 ip: {{ spoke_api_ip }}
 alias:
 - api.{{ spoke_name }}.{{ domain }}
 - api-int.{{ spoke_name }}.{{ domain }}

apps-{{ spoke_name }}:
 type: dns
 net: {{ baremetal_net }}
 ip: {{ spoke_ingress_ip }}
 alias:
 - console-openshift-console.apps.{{ spoke_name }}.{{ domain }}
 - oauth-openshift.apps.{{ spoke_name }}.{{ domain }}
 - prometheus-k8s-openshift-monitoring.apps.{{ spoke_name }}.{{ domain }}
 - canary-openshift-ingress-canary.apps.{{ spoke_name }}.{{ domain }}
 - assisted-service-open-cluster-management.apps.{{ spoke_name }}.{{ domain }}
 - assisted-service-assisted-installer.apps.{{ spoke_name }}.{{ domain }}
 - assisted-image-service-open-cluster-management.apps.{{ spoke_name }}.{{ domain }}
{% endif %}
{% endfor %}

{% if not virtual_workers %}
{% set virtual_workers_number = 0 %}
{% endif %}

{% for spoke in ztp_spokes %}
{% set spoke_name = spoke.name %}
{% set spoke_ctlplanes_number = spoke.get('ctlplanes_number', 1) %}
{% set spoke_workers_number = spoke.get('workers_number', 0) %}
{% set spoke_snoplus = True if spoke_ctlplanes_number == 1 and spoke_workers_number == 1 else False %}
{% if spoke_snoplus %}
{% do snoplus_spokes.append(spoke_name) %}
{% endif %}
{% endfor %}

{{ cluster }}-installer: 
 image: {{ image }} 
 pool: {{ pool }} 
 wait: {{ installer_wait }}
 numcpus: {{ installer_numcpus or numcpus }}
 uefi: false
 uefi_legacy: false
 secureboot: false
 keys: {{ keys }}
{% if 'rhel' in image %}
 rhnregister: {{ rhnregister }}
{% endif %}
 networkwait: {{ rhnwait }}
 memory: {{ installer_memory or memory }}
 privatekey: true
 notify: {{ notify }}
{% if deploy_openshift %}
 notifyscript: {{ notifyscript }}
{% elif launch_steps %}
 notifycmd: oc get clusterversion
{% else %}
 notifycmd: echo machine $(hostname) ready at $(hostname -I)
{% endif %}
 nets:
 - name: {{ baremetal_net }}
{% if installer_mac != None %}
   mac: {{ installer_mac }}
{% endif %}
{% if installer_ip != None %}
   ip: {{ installer_ip }}
   mask: {{ baremetal_cidr.split('/')[1] }}
   gateway: {{ static_baremetal_gateway or baremetal_cidr|network_ip(1 if lab else -2) }}
   dns: {{ static_baremetal_dns or static_baremetal_gateway or baremetal_cidr|network_ip(1 if lab else -2) }}
{% endif %}
   ipv6: {{ true if baremetal_cidr != None and ':' in baremetal_cidr else false }}
{% if baremetal_cidr != None and ':' in baremetal_cidr and (not dualstack or dualstack and dualstack_isolated) %}
 - default
{% endif %}
 disks:
 - {{ installer_disk_size or disk_size }}
 files:
{% if KUBECONFIG != None %}
 - origin: {{ KUBECONFIG }}
   path: /root/ocp/auth/kubeconfig
{% endif %}
 - agent-config.yaml 
 - install-config.yaml 
{% if motd != None %}
 - path: /etc/motd
   origin: {{ motd }}
{% endif %}
 - path: /root/.bashrc
   origin: envfiles/bashrc
{% if not offline|default(False) and not workflow_installer %}
 - path: /root/.kcli/config.yml
   origin: bin/kcli_config.yml
{% endif %}
{% if disconnected_quay and ':' in baremetal_cidr %}
 - path: /usr/lib/systemd/system/quay-haproxy.service
   origin: mirror-registry/quay_haproxy.service
 - mirror-registry/quay_haproxy.cfg
{% endif %}
 - origin: {{ pullsecret }}
   path: /root/openshift_pull.json
 - path: /etc/systemd/system/registry.service
   origin: bin/registry.service
{% for ca in cas %}
{% set num = loop.index0 %}
 - path: /etc/pki/ca-trust/source/anchors/RH-IT-Root-CA{{ num }}.crt
   content: |
    {{ ca |certificate | replace('\n', '\n    ') }}
{% endfor %}
{% if http_proxy != None %}
 - path: /root/scripts/proxy.sh
   origin: envfiles/proxy.sh
   mode: 644
{% endif %}
 - path: /root/bin/mapping_to_icsp.py
   origin: bin/mapping_to_icsp.py
   render: false
 - bin
 - scripts
 - machineconfigs
{% if manifests_dir|exists %}
 - origin: {{ manifests_dir }}
   path: /root/manifests
{% endif %}
{% if installer_mac != None and ':' in api_ip|default('') %}
 - path: /etc/NetworkManager/conf.d/kcli-ipv6.conf
   origin: envfiles/kcli-ipv6.conf
{% endif %}
{% if dns %}
 - dnsmasq.conf
{% endif %}
 - ztp/scripts/launch_steps.sh
 - ztp/scripts/01_assisted-service.sh
 - ztp/scripts/02_git.sh
 - ztp/scripts/03_spokes_deploy.sh
 - ztp/scripts/04_spokes_wait.sh
 - ztp/scripts/05_snoplus.sh
 - ztp/scripts/06_compliance.sh
 - ztp/scripts/gitops
 - ztp/scripts/generate_gitops.sh
 - ztp/scripts/requirements.sample.yml
 - ztp/scripts/siteconfig.sample.yml
 - ztp/scripts/kustomization.yaml
 - ztp/scripts/kube_compare.sh
 - ztp/scripts/kube_compare_metadata.yaml
 - path: /root/ztp/scripts/kubeconfig.sh
   origin: ztp/scripts/kubeconfig.sh
 - ztp/scripts/gitea.service
{% if snoplus_spokes %}
 - path: /root/ztp/scripts/snoplus.txt
   content: |
{% for spoke in snoplus_spokes %}
     {{ spoke }}
{% endfor %}
{% endif %}
{% if ztp_policies_dir|exists %}
 - origin: {{ ztp_policies_dir }}
   path: /root/ztp/scripts/site-policies
   render: false
{% endif %}
{% if launch_steps %}
 cmds:
 - bash /root/scripts/launch_steps.sh
{% endif %}
