apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
 name: kcli-plan-baremetal-lab
spec:
 params:
 - name: plan
   description: plan
   type: string
   default: "baremetal-lab"
 - name: inputfile
   description: inputfile
   type: string
   default: "kcli_plan.yml"
 - name: url
   description: url
   type: string
   default: "https://github.com/karmab/kcli-openshift4-baremetal"
 - name: commit
   description: commit
   type: string
   default: "master"
 - name: paramfile
   type: string
   default: "lab.yml"
 - name: pullsecret
   description: pullsecret
   type: string
   default: "/root/.kcli/openshift_pull.json"
 - name: launch_steps
   description: launch_steps
   type: string
   default: "True"
 - name: deploy_openshift
   description: deploy_openshift
   type: string
   default: "True"
 - name: version
   description: version
   type: string
   default: "stable"
 - name: tag
   description: tag
   type: string
   default: "4.9"
 steps:
  - name: git-clone
    image: "gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.21.0"
    env:
    - name: URL
      value: $(params.url)
    - name: COMMIT
      value: $(params.commit)
    script: |
     #!/usr/bin/env sh
     cd /source
     git clone $URL .
     git checkout $COMMIT
    volumeMounts:
    - mountPath: /source
      name: git-source
  - name: deploy
    image: "quay.io/karmab/kcli:latest"
    env:
    - name: PLAN
      value: $(params.plan)
    - name: INPUTFILE
      value: $(params.inputfile)
    - name: PARAMFILE
      value: $(params.paramfile)
    - name: PULLSECRET
      value: $(params.pullsecret)
    - name: LAUNCH_STEPS
      value: $(params.launch_steps)
    - name: DEPLOY_OPENSHIFT
      value: $(params.deploy_openshift)
    - name: VERSION
      value: $(params.version)
    - name: TAG
      value: $(params.tag)
    - name: PYTHONUNBUFFERED
      value: "true"
    script: |
     #!/usr/bin/env bash
     cd /source
     echo kcli create plan --force $INPUTFILE --paramfile $PARAMFILE -P pullsecret="$PULLSECRET" -P launch_steps="$LAUNCH_STEPS" -P deploy_openshift="$DEPLOY_OPENSHIFT" -P version="$VERSION" -P tag="$TAG" $PLAN
     kcli create plan --force -f $INPUTFILE --paramfile $PARAMFILE -P pullsecret="$PULLSECRET" -P launch_steps="$LAUNCH_STEPS" -P deploy_openshift="$DEPLOY_OPENSHIFT" -P version="$VERSION" -P tag="$TAG" $PLAN
    volumeMounts:
    - mountPath: /home/tekton/.kcli
      name: kcli-config
    - mountPath: /source
      name: git-source
 volumes:
 - configMap:
     defaultMode: 0700
     name: kcli-config
   name: kcli-config
 - name: git-source
   emptyDir: {}
---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: kcli-plan-baremetal-lab
spec:
  description: deploy plan baremetal-lab
  params:
  - name: plan
    type: string
    default: "baremetal-lab"
  - name: inputfile
    type: string
    default: "kcli_plan.yml"
  - name: paramfile
    type: string
    default: "lab.yml"
  - name: commit
    type: string
    default: "master"
  - name: pullsecret
    description: pullsecret
    type: string
    default: "/root/.kcli/openshift_pull.json"
  - name: launch_steps
    description: launch_steps
    type: string
    default: "True"
  - name: deploy_openshift
    description: deploy_openshift
    type: string
    default: "True"
  - name: version
    description: version
    type: string
    default: "stable"
  - name: tag
    description: tag
    type: string
    default: "4.9"
  tasks:
  - name: kcli-plan-baremetal-lab
    taskRef:
      name: kcli-plan-baremetal-lab
    params:
    - name: plan
      value: $(params.plan)
    - name: inputfile
      value: $(params.inputfile)
    - name: paramfile
      value: $(params.paramfile)
    - name: url
      value: https://github.com/karmab/kcli-openshift4-baremetal
    - name: commit
      value: $(params.commit)
    - name: pullsecret
      value: $(params.pullsecret)
    - name: launch_steps
      value: $(params.launch_steps)
    - name: deploy_openshift
      value: $(params.deploy_openshift)
    - name: version
      value: $(params.version)
    - name: tag
      value: $(params.tag)

